{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./../redux/shop/shop.sagas\";\nimport rootReducers from \"./root.reducer\";\nimport rootSagas from \"./root.sagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducers, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSagas);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/kaung/Desktop/yihuas-react/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducers","rootSagas","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACD;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACM,YAAD,EAAeL,eAAe,CAAC,GAAGQ,WAAJ,CAA9B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,SAAnB;AACA,OAAO,MAAMS,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA9B;AACP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./../redux/shop/shop.sagas\";\n\nimport rootReducers from \"./root.reducer\";\nimport rootSagas from \"./root.sagas\";\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducers, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSagas);\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}