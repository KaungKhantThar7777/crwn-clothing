{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\nimport { googleSigninSuccess, googleSigninFailure, emailSigninFailure, emailSigninSuccess } from \"./user.actions\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\nexport function* signinWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSigninSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(googleSigninFailure(err.message));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGNIN_START, signinWithGoogle);\n}\nexport function* signinWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    console.log(email, password);\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSigninSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(emailSigninFailure(err.message));\n  }\n}\nexport function* onEmailSigninStart() {\n  yield takeLatest(userTypes.EMAIL_SIGNIN_START, signinWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart), call(onEmailSigninStart)]);\n}","map":{"version":3,"sources":["/home/kaung/Desktop/yihuas-react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","userTypes","googleSigninSuccess","googleSigninFailure","emailSigninFailure","emailSigninSuccess","auth","createUserProfileDocument","googleProvider","signinWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","err","message","onGoogleSigninStart","GOOGLE_SIGNIN_START","signinWithEmail","payload","email","password","console","log","signInWithEmailAndPassword","onEmailSigninStart","EMAIL_SIGNIN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,gBALP;AAOA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBH,cAArB,CAAvB;AACA,UAAMI,OAAO,GAAG,MAAMb,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACPI,mBAAmB,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMnB,GAAG,CAACK,mBAAmB,CAACc,GAAG,CAACC,OAAL,CAApB,CAAT;AACD;AACF;AACD,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMtB,UAAU,CAACI,SAAS,CAACmB,mBAAX,EAAgCX,gBAAhC,CAAhB;AACD;AAED,OAAO,UAAUY,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,QAAnB;AACA,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACqB,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMZ,OAAO,GAAG,MAAMb,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACPO,kBAAkB,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADX,CAAT;AAGD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,UAAMnB,GAAG,CAACM,kBAAkB,CAACa,GAAG,CAACC,OAAL,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACpC,QAAM/B,UAAU,CAACI,SAAS,CAAC4B,kBAAX,EAA+BR,eAA/B,CAAhB;AACD;AACD,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM9B,GAAG,CAAC,CAACD,IAAI,CAACoB,mBAAD,CAAL,EAA4BpB,IAAI,CAAC6B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\n\nimport {\n  googleSigninSuccess,\n  googleSigninFailure,\n  emailSigninFailure,\n  emailSigninSuccess,\n} from \"./user.actions\";\n\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n} from \"../../firebase/firebase.utils\";\n\nexport function* signinWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      googleSigninSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (err) {\n    yield put(googleSigninFailure(err.message));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGNIN_START, signinWithGoogle);\n}\n\nexport function* signinWithEmail({ payload: { email, password } }) {\n  try {\n    console.log(email, password);\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      emailSigninSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (err) {\n    yield put(emailSigninFailure(err.message));\n  }\n}\n\nexport function* onEmailSigninStart() {\n  yield takeLatest(userTypes.EMAIL_SIGNIN_START, signinWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart), call(onEmailSigninStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}