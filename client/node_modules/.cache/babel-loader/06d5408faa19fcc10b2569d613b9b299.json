{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyAkKIegBNTukY-XPPA8juBmfjX8Ri_7Inc\",\n  authDomain: \"crwn-db-f03cd.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-f03cd.firebaseio.com\",\n  projectId: \"crwn-db-f03cd\",\n  storageBucket: \"crwn-db-f03cd.appspot.com\",\n  messagingSenderId: \"101137826880\",\n  appId: \"1:101137826880:web:549c55611e66723f55cba5\",\n  measurementId: \"G-XT42EM07G0\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const SignInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport const createUserProfileDocument = async (userAuth, other) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...other\n      });\n    } catch (err) {\n      console.log(\"Error creating user!\", err);\n    }\n  }\n\n  return userRef;\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unscribeAuth = auth.onAuthStateChanged(auth => {\n      unscribeAuth();\n      resolve(auth);\n    }, reject);\n  });\n};\nexport const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newRef = collectionRef.doc();\n    batch.set(newRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollections = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title),\n      title,\n      items,\n      id: doc.id\n    };\n  });\n  return transformedCollections.reduce((acc, collection) => {\n    acc[collection.title.toLowerCase()] = collection;\n    return acc;\n  }, {});\n};\nexport default firebase;","map":{"version":3,"sources":["/home/kaung/Desktop/yihuas-react/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup","createUserProfileDocument","userAuth","other","userRef","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","console","log","getCurrentUser","Promise","resolve","reject","unscribeAuth","onAuthStateChanged","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollections","docs","map","title","items","data","routeName","encodeURI","id","reduce","acc","toLowerCase"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyAkKIegBNTukY-XPPA8juBmfjX8Ri_7Inc\",\n  authDomain: \"crwn-db-f03cd.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-f03cd.firebaseio.com\",\n  projectId: \"crwn-db-f03cd\",\n  storageBucket: \"crwn-db-f03cd.appspot.com\",\n  messagingSenderId: \"101137826880\",\n  appId: \"1:101137826880:web:549c55611e66723f55cba5\",\n  measurementId: \"G-XT42EM07G0\",\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const SignInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport const createUserProfileDocument = async (userAuth, other) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...other,\n      });\n    } catch (err) {\n      console.log(\"Error creating user!\", err);\n    }\n  }\n\n  return userRef;\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unscribeAuth = auth.onAuthStateChanged((auth) => {\n      unscribeAuth();\n      resolve(auth);\n    }, reject);\n  });\n};\nexport const addCollectionsAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n\n  objectsToAdd.forEach((obj) => {\n    const newRef = collectionRef.doc();\n    batch.set(newRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollections = collections.docs.map((doc) => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title),\n      title,\n      items,\n      id: doc.id,\n    };\n  });\n\n  return transformedCollections.reduce((acc, collection) => {\n    acc[collection.title.toLowerCase()] = collection;\n    return acc;\n  }, {});\n};\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}