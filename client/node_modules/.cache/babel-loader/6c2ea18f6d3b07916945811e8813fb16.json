{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyAkKIegBNTukY-XPPA8juBmfjX8Ri_7Inc\",\n  authDomain: \"crwn-db-f03cd.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-f03cd.firebaseio.com\",\n  projectId: \"crwn-db-f03cd\",\n  storageBucket: \"crwn-db-f03cd.appspot.com\",\n  messagingSenderId: \"101137826880\",\n  appId: \"1:101137826880:web:549c55611e66723f55cba5\",\n  measurementId: \"G-XT42EM07G0\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\nfbProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const SignInWithFB = () => auth.signInWithPopup(fbProvider);\nexport const createUserProfileDocument = async (userAuth, other) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...other\n      });\n    } catch (err) {\n      console.log(\"Error creating user!\", err);\n    }\n  }\n\n  return userRef;\n};\nexport default firebase;","map":{"version":3,"sources":["/home/kaung/Desktop/yihuas-react/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup","fbProvider","FacebookAuthProvider","SignInWithFB","createUserProfileDocument","userAuth","other","userRef","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","console","log"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAIb,QAAQ,CAACW,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B;AAEP,MAAMM,UAAU,GAAG,IAAInB,QAAQ,CAACW,IAAT,CAAcS,oBAAlB,EAAnB;AACAD,UAAU,CAACJ,mBAAX,CAA+B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA/B;AAEA,OAAO,MAAMK,YAAY,GAAG,MAAMV,IAAI,CAACO,eAAL,CAAqBC,UAArB,CAA3B;AAEP,OAAO,MAAMG,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,KAAjB,KAA2B;AAClE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGb,SAAS,CAACc,GAAV,CAAe,UAASH,QAAQ,CAACI,GAAI,EAArC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AAEA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOY,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACD;AACF;;AAED,SAAOX,OAAP;AACD,CAzBM;AA2BP,eAAezB,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyAkKIegBNTukY-XPPA8juBmfjX8Ri_7Inc\",\n  authDomain: \"crwn-db-f03cd.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-f03cd.firebaseio.com\",\n  projectId: \"crwn-db-f03cd\",\n  storageBucket: \"crwn-db-f03cd.appspot.com\",\n  messagingSenderId: \"101137826880\",\n  appId: \"1:101137826880:web:549c55611e66723f55cba5\",\n  measurementId: \"G-XT42EM07G0\",\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\n\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\nfbProvider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const SignInWithFB = () => auth.signInWithPopup(fbProvider);\n\nexport const createUserProfileDocument = async (userAuth, other) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...other,\n      });\n    } catch (err) {\n      console.log(\"Error creating user!\", err);\n    }\n  }\n\n  return userRef;\n};\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}