{"ast":null,"code":"var _jsxFileName = \"/home/kaung/Desktop/yihuas-react/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupStart } from \"../../redux/user/user.actions\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport \"./sign-up.styles.scss\";\n\nconst Signup = ({\n  signupStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (password !== confirmPassword) {\n      return alert(\"Passwords do not match!\");\n    }\n\n    signupStart(email, password, displayName);\n  };\n\n  handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"I don't have an account.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Sign Up with email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Sign up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signupStart: (email, password, displayName) => dispatch(signupStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/home/kaung/Desktop/yihuas-react/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","signupStart","CustomButton","FormInput","Signup","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","evt","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupStart } from \"../../redux/user/user.actions\";\n\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\n\nimport \"./sign-up.styles.scss\";\n\nconst Signup = ({ signupStart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const { displayName, email, password, confirmPassword } = userCredentials;\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    if (password !== confirmPassword) {\n      return alert(\"Passwords do not match!\");\n    }\n    signupStart(email, password, displayName);\n  };\n  handleChange = (evt) => {\n    const { name, value } = evt.target;\n\n    setUserCredentials({\n      ...userCredentials,\n      [name]: value,\n    });\n  };\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I don't have an account.</h2>\n      <span>Sign Up with email and password</span>\n      <form onSubmit={handleSubmit} method=\"post\">\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          handleChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"Email\"\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"Password\"\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          handleChange={handleChange}\n          label=\"Confirm Password\"\n        />\n        <CustomButton type=\"submit\">Sign up</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signupStart: (email, password, displayName) =>\n    dispatch(signupStart({ email, password, displayName })),\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);\n"]},"metadata":{},"sourceType":"module"}