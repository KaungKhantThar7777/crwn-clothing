{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\nexport function* googleSigninStart() {\n  try {\n    alert(\"I am fired!!!\");\n    const userRef = yield auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n    yield put({\n      type: userTypes.GOOGLE_SIGNIN_SUCCESS\n    });\n  } catch (err) {}\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGNIN_START, googleSigninStart);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart)]);\n}","map":{"version":3,"sources":["/home/kaung/Desktop/yihuas-react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","userTypes","auth","createUserProfileDocument","googleProvider","googleSigninStart","alert","userRef","signInWithPopup","console","log","type","GOOGLE_SIGNIN_SUCCESS","err","onGoogleSigninStart","GOOGLE_SIGNIN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,iBAAV,GAA8B;AACnC,MAAI;AACFC,IAAAA,KAAK,CAAC,eAAD,CAAL;AACA,UAAMC,OAAO,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBJ,cAArB,CAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,UAAMT,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAEV,SAAS,CAACW;AAAlB,KAAD,CAAT;AACD,GALD,CAKE,OAAOC,GAAP,EAAY,CAAE;AACjB;AACD,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMjB,UAAU,CAACI,SAAS,CAACc,mBAAX,EAAgCV,iBAAhC,CAAhB;AACD;AAED,OAAO,UAAUW,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACD,IAAI,CAACe,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\n\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n} from \"../../firebase/firebase.utils\";\n\nexport function* googleSigninStart() {\n  try {\n    alert(\"I am fired!!!\");\n    const userRef = yield auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n    yield put({ type: userTypes.GOOGLE_SIGNIN_SUCCESS });\n  } catch (err) {}\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGNIN_START, googleSigninStart);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}