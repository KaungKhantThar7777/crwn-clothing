{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\nimport { signinSuccess, signinFailure, signoutSuccess, signoutFailure } from \"./user.actions\";\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../firebase/firebase.utils\";\n\nfunction* getSnapshotFromAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n  yield put(signinSuccess({\n    id: userSnapshot.id,\n    ...userSnapshot.data()\n  }));\n}\n\nexport function* signinWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromAuth(user);\n  } catch (err) {\n    yield put(signinFailure(err.message));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGNIN_START, signinWithGoogle);\n}\nexport function* signinWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromAuth(user);\n  } catch (err) {\n    yield put(signinFailure(err.message));\n  }\n}\nexport function* onEmailSigninStart() {\n  yield takeLatest(userTypes.EMAIL_SIGNIN_START, signinWithEmail);\n}\nexport function* isAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromAuth(userAuth);\n  } catch (err) {\n    yield signinFailure(err.message);\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signoutSuccess());\n  } catch (err) {\n    yield put(signoutFailure(err.message));\n  }\n}\nexport function* onSignout() {\n  yield takeLatest(userTypes.SIGNOUT_START, signOut);\n}\nexport function* signup({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  const user = yield auth.createUserWithEmailAndPassword(email, password);\n  console.log(user);\n}\nexport function* onSignup() {\n  yield takeLatest(userTypes.SIGNUP_START, signup);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart), call(onEmailSigninStart), call(onCheckUserSession), call(onSignout), call(onSignup)]);\n}","map":{"version":3,"sources":["/home/kaung/Desktop/yihuas-react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","userTypes","signinSuccess","signinFailure","signoutSuccess","signoutFailure","auth","createUserProfileDocument","googleProvider","getCurrentUser","getSnapshotFromAuth","userAuth","userRef","userSnapshot","get","id","data","signinWithGoogle","user","signInWithPopup","err","message","onGoogleSigninStart","GOOGLE_SIGNIN_START","signinWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSigninStart","EMAIL_SIGNIN_START","isAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignout","SIGNOUT_START","signup","displayName","createUserWithEmailAndPassword","console","log","onSignup","SIGNUP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\n\nimport {\n  signinSuccess,\n  signinFailure,\n  signoutSuccess,\n  signoutFailure,\n} from \"./user.actions\";\n\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nfunction* getSnapshotFromAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n  yield put(signinSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n}\nexport function* signinWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromAuth(user);\n  } catch (err) {\n    yield put(signinFailure(err.message));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGNIN_START, signinWithGoogle);\n}\n\nexport function* signinWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromAuth(user);\n  } catch (err) {\n    yield put(signinFailure(err.message));\n  }\n}\n\nexport function* onEmailSigninStart() {\n  yield takeLatest(userTypes.EMAIL_SIGNIN_START, signinWithEmail);\n}\n\nexport function* isAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) return;\n    yield getSnapshotFromAuth(userAuth);\n  } catch (err) {\n    yield signinFailure(err.message);\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isAuthenticated);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signoutSuccess());\n  } catch (err) {\n    yield put(signoutFailure(err.message));\n  }\n}\nexport function* onSignout() {\n  yield takeLatest(userTypes.SIGNOUT_START, signOut);\n}\nexport function* signup({ payload: { email, password, displayName } }) {\n  const user = yield auth.createUserWithEmailAndPassword(email, password);\n  console.log(user);\n}\nexport function* onSignup() {\n  yield takeLatest(userTypes.SIGNUP_START, signup);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSigninStart),\n    call(onEmailSigninStart),\n    call(onCheckUserSession),\n    call(onSignout),\n    call(onSignup),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}